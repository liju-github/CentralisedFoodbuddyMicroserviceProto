syntax = "proto3";

package ordercart;
option go_package = ".";

// Define the OrderCartService
service OrderCartService {
    // Cart Operations
    rpc AddProductToCart(AddProductToCartRequest) returns (AddProductToCartResponse);
    rpc GetCartItems(GetCartItemsRequest) returns (GetCartItemsResponse);
    rpc GetCartByRestaurant(GetCartByRestaurantRequest) returns (GetCartByRestaurantResponse);
    rpc GetAllCarts(GetAllCartsRequest) returns (GetAllCartsResponse);
    rpc IncrementProductQuantity(IncrementProductQuantityRequest) returns (IncrementProductQuantityResponse);
    rpc DecrementProductQuantity(DecrementProductQuantityRequest) returns (DecrementProductQuantityResponse);
    rpc RemoveProductFromCart(RemoveProductFromCartRequest) returns (RemoveProductFromCartResponse);
    rpc ClearCart(ClearCartRequest) returns (ClearCartResponse);
    rpc ValidateCartItems(ValidateCartItemsRequest) returns (ValidateCartItemsResponse);
    
    // Order Operations
    rpc PlaceOrderByRestID(PlaceOrderByRestIDRequest) returns (PlaceOrderByRestIDResponse);
    rpc GetOrderDetailsAll(GetOrderDetailsAllRequest) returns (GetOrderDetailsAllResponse);
    rpc GetOrderDetailsByID(GetOrderDetailsByIDRequest) returns (GetOrderDetailsByIDResponse);
    rpc CancelOrder(CancelOrderRequest) returns (CancelOrderResponse);
    rpc UpdateOrderStatus(UpdateOrderStatusRequest) returns (UpdateOrderStatusResponse);
    rpc GetRestaurantOrders(GetRestaurantOrdersRequest) returns (GetRestaurantOrdersResponse);
}

// Address message
message Address {
    string streetName = 1;
    string locality = 2;
    string state = 3;
    string pincode = 4;
}

// Cart Item message
message CartItem {
    string productId = 1;
    string restaurantId = 2;
    string productName = 3;
    string description = 4;
    string category = 5;
    double price = 6;
    int32 quantity = 7;
}

// Restaurant Cart message
message RestaurantCart {
    string restaurantId = 1;
    string restaurantName = 2;
    uint64 restaurantPhone = 3;
    Address address = 4;
    repeated CartItem items = 5;
    double totalAmount = 6;
}

// Order Item message
message OrderItem {
    string productId = 1;
    string productName = 2;
    string description = 3;
    string category = 4;
    double price = 5;
    int32 quantity = 6;
}

// Order message
message Order {
    string orderId = 1;
    string userId = 2;
    string restaurantId = 3;
    string restaurantName = 4;
    uint64 restaurantPhone = 5;
    Address restaurantAddress = 6;
    repeated OrderItem items = 7;
    double totalAmount = 8;
    string orderStatus = 9;  // "PENDING", "ACCEPTED", "PREPARING", "READY", "DELIVERED", "CANCELLED"
    string createdAt = 10;
    Address deliveryAddress = 11;
    string cancelReason = 12;
}

// Cart Operations Messages
message AddProductToCartRequest {
    string userId = 1;
    string productId = 2;
    int32 quantity = 3;
}

message AddProductToCartResponse {
    bool success = 1;
    string message = 2;
}

message GetCartItemsRequest {
    string userId = 1;
    string restaurantId = 2;
}

message GetCartItemsResponse {
    repeated CartItem items = 1;
    double totalAmount = 2;
    string message = 3;
    string restaurantName = 4;
    uint64 restaurantPhone = 5;
    Address restaurantAddress = 6;
}

message GetCartByRestaurantRequest {
    string userId = 1;
    string restaurantId = 2;
}

message GetCartByRestaurantResponse {
    repeated CartItem items = 1;
    double totalAmount = 2;
    string restaurantName = 3;
    uint64 restaurantPhone = 4;
    Address restaurantAddress = 5;
}

message GetAllCartsRequest {
    string userId = 1;
}

message GetAllCartsResponse {
    repeated RestaurantCart carts = 1;
    double totalOverallAmount = 2;
}

message IncrementProductQuantityRequest {
    string userId = 1;
    string productId = 2;
    string restaurantId = 3;
}

message IncrementProductQuantityResponse {
    bool success = 1;
    string message = 2;
    CartItem updatedItem = 3;
}

message DecrementProductQuantityRequest {
    string userId = 1;
    string productId = 2;
    string restaurantId = 3;
}

message DecrementProductQuantityResponse {
    bool success = 1;
    string message = 2;
    CartItem updatedItem = 3;
}

message RemoveProductFromCartRequest {
    string userId = 1;
    string productId = 2;
    string restaurantId = 3;
}

message RemoveProductFromCartResponse {
    bool success = 1;
    string message = 2;
}

message ClearCartRequest {
    string userId = 1;
    string restaurantId = 2;
}

message ClearCartResponse {
    bool success = 1;
    string message = 2;
}

message ValidateCartItemsRequest {
    string userId = 1;
    string restaurantId = 2;
}

message ValidateCartItemsResponse {
    bool isValid = 1;
    string message = 2;
    repeated string invalidProductIds = 3;
    repeated string reasons = 4;
}

// Order Operations Messages
message PlaceOrderByRestIDRequest {
    string userId = 1;
    string restaurantId = 2;
    Address deliveryAddress = 3;
}

message PlaceOrderByRestIDResponse {
    string orderId = 1;
    bool success = 2;
    string message = 3;
    Order order = 4;
}

message GetOrderDetailsAllRequest {
    string userId = 1;
    string status = 2;  // Optional, filter by status
    string startDate = 3;
    string endDate = 4;
}

message GetOrderDetailsAllResponse {
    repeated Order orders = 1;
    string message = 2;
    int32 totalOrders = 3;
    double totalAmount = 4;
}

message GetOrderDetailsByIDRequest {
    string orderId = 1;
    string userId = 2;  // For authorization
}

message GetOrderDetailsByIDResponse {
    Order order = 1;
    string message = 2;
}

message CancelOrderRequest {
    string orderId = 1;
    string userId = 2;
    string reason = 3;
}

message CancelOrderResponse {
    bool success = 1;
    string message = 2;
    string cancelReason = 3;
}

message UpdateOrderStatusRequest {
    string orderId = 1;
    string restaurantId = 2;  // For authorization
    string newStatus = 3;     // "ACCEPTED", "PREPARING", "READY", "DELIVERED"
    string statusNote = 4;
}

message UpdateOrderStatusResponse {
    bool success = 1;
    string message = 2;
    string currentStatus = 3;
}

message GetRestaurantOrdersRequest {
    string restaurantId = 1;
    string status = 2;        // Optional, filter by status
    string startDate = 3;
    string endDate = 4;
}

message GetRestaurantOrdersResponse {
    repeated Order orders = 1;
    string message = 2;
    int32 totalOrders = 3;
    double totalAmount = 4;
}