// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.19.6
// source: Restaurant/restaurant.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Define messages for RestaurantService methods
type EditRestaurantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestaurantId   string   `protobuf:"bytes,1,opt,name=restaurantId,proto3" json:"restaurantId,omitempty"`
	RestaurantName string   `protobuf:"bytes,2,opt,name=restaurantName,proto3" json:"restaurantName,omitempty"`
	PhoneNumber    uint64   `protobuf:"varint,3,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	Address        *Address `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *EditRestaurantRequest) Reset() {
	*x = EditRestaurantRequest{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditRestaurantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditRestaurantRequest) ProtoMessage() {}

func (x *EditRestaurantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditRestaurantRequest.ProtoReflect.Descriptor instead.
func (*EditRestaurantRequest) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{0}
}

func (x *EditRestaurantRequest) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *EditRestaurantRequest) GetRestaurantName() string {
	if x != nil {
		return x.RestaurantName
	}
	return ""
}

func (x *EditRestaurantRequest) GetPhoneNumber() uint64 {
	if x != nil {
		return x.PhoneNumber
	}
	return 0
}

func (x *EditRestaurantRequest) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

type EditRestaurantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EditRestaurantResponse) Reset() {
	*x = EditRestaurantResponse{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditRestaurantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditRestaurantResponse) ProtoMessage() {}

func (x *EditRestaurantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditRestaurantResponse.ProtoReflect.Descriptor instead.
func (*EditRestaurantResponse) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{1}
}

func (x *EditRestaurantResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetRestaurantProductsByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestaurantId string `protobuf:"bytes,1,opt,name=restaurantId,proto3" json:"restaurantId,omitempty"`
}

func (x *GetRestaurantProductsByIDRequest) Reset() {
	*x = GetRestaurantProductsByIDRequest{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRestaurantProductsByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRestaurantProductsByIDRequest) ProtoMessage() {}

func (x *GetRestaurantProductsByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRestaurantProductsByIDRequest.ProtoReflect.Descriptor instead.
func (*GetRestaurantProductsByIDRequest) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{2}
}

func (x *GetRestaurantProductsByIDRequest) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

type GetRestaurantProductsByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Products []*Product `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
	Message  string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetRestaurantProductsByIDResponse) Reset() {
	*x = GetRestaurantProductsByIDResponse{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRestaurantProductsByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRestaurantProductsByIDResponse) ProtoMessage() {}

func (x *GetRestaurantProductsByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRestaurantProductsByIDResponse.ProtoReflect.Descriptor instead.
func (*GetRestaurantProductsByIDResponse) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{3}
}

func (x *GetRestaurantProductsByIDResponse) GetProducts() []*Product {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *GetRestaurantProductsByIDResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetAllRestaurantAndProductsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllRestaurantAndProductsRequest) Reset() {
	*x = GetAllRestaurantAndProductsRequest{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllRestaurantAndProductsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllRestaurantAndProductsRequest) ProtoMessage() {}

func (x *GetAllRestaurantAndProductsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllRestaurantAndProductsRequest.ProtoReflect.Descriptor instead.
func (*GetAllRestaurantAndProductsRequest) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{4}
}

type GetAllRestaurantWithProductsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Restaurants []*RestaurantWithProducts `protobuf:"bytes,1,rep,name=restaurants,proto3" json:"restaurants,omitempty"`
	Message     string                    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetAllRestaurantWithProductsResponse) Reset() {
	*x = GetAllRestaurantWithProductsResponse{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllRestaurantWithProductsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllRestaurantWithProductsResponse) ProtoMessage() {}

func (x *GetAllRestaurantWithProductsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllRestaurantWithProductsResponse.ProtoReflect.Descriptor instead.
func (*GetAllRestaurantWithProductsResponse) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllRestaurantWithProductsResponse) GetRestaurants() []*RestaurantWithProducts {
	if x != nil {
		return x.Restaurants
	}
	return nil
}

func (x *GetAllRestaurantWithProductsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RestaurantWithProducts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestaurantId   string     `protobuf:"bytes,1,opt,name=restaurantId,proto3" json:"restaurantId,omitempty"`
	RestaurantName string     `protobuf:"bytes,2,opt,name=restaurantName,proto3" json:"restaurantName,omitempty"`
	PhoneNumber    uint64     `protobuf:"varint,3,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	Address        *Address   `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Products       []*Product `protobuf:"bytes,5,rep,name=products,proto3" json:"products,omitempty"`
}

func (x *RestaurantWithProducts) Reset() {
	*x = RestaurantWithProducts{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestaurantWithProducts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantWithProducts) ProtoMessage() {}

func (x *RestaurantWithProducts) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantWithProducts.ProtoReflect.Descriptor instead.
func (*RestaurantWithProducts) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{6}
}

func (x *RestaurantWithProducts) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *RestaurantWithProducts) GetRestaurantName() string {
	if x != nil {
		return x.RestaurantName
	}
	return ""
}

func (x *RestaurantWithProducts) GetPhoneNumber() uint64 {
	if x != nil {
		return x.PhoneNumber
	}
	return 0
}

func (x *RestaurantWithProducts) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *RestaurantWithProducts) GetProducts() []*Product {
	if x != nil {
		return x.Products
	}
	return nil
}

type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId    string  `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
	RestaurantId string  `protobuf:"bytes,2,opt,name=restaurantId,proto3" json:"restaurantId,omitempty"`
	Name         string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description  string  `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Price        float64 `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	Stock        int32   `protobuf:"varint,6,opt,name=stock,proto3" json:"stock,omitempty"`
	Category     string  `protobuf:"bytes,7,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *Product) Reset() {
	*x = Product{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{7}
}

func (x *Product) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *Product) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *Product) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Product) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Product) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Product) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *Product) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type AddProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestaurantId string  `protobuf:"bytes,1,opt,name=restaurantId,proto3" json:"restaurantId,omitempty"`
	Name         string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description  string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Price        float64 `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	Stock        int32   `protobuf:"varint,5,opt,name=stock,proto3" json:"stock,omitempty"`
	Category     string  `protobuf:"bytes,6,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *AddProductRequest) Reset() {
	*x = AddProductRequest{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProductRequest) ProtoMessage() {}

func (x *AddProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProductRequest.ProtoReflect.Descriptor instead.
func (*AddProductRequest) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{8}
}

func (x *AddProductRequest) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *AddProductRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddProductRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddProductRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *AddProductRequest) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *AddProductRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type AddProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
	Message   string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddProductResponse) Reset() {
	*x = AddProductResponse{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProductResponse) ProtoMessage() {}

func (x *AddProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProductResponse.ProtoReflect.Descriptor instead.
func (*AddProductResponse) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{9}
}

func (x *AddProductResponse) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *AddProductResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type EditProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId    string  `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
	RestaurantId string  `protobuf:"bytes,2,opt,name=restaurantId,proto3" json:"restaurantId,omitempty"`
	Name         string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description  string  `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Price        float64 `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	Stock        int32   `protobuf:"varint,6,opt,name=stock,proto3" json:"stock,omitempty"`
	Category     string  `protobuf:"bytes,7,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *EditProductRequest) Reset() {
	*x = EditProductRequest{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditProductRequest) ProtoMessage() {}

func (x *EditProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditProductRequest.ProtoReflect.Descriptor instead.
func (*EditProductRequest) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{10}
}

func (x *EditProductRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *EditProductRequest) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *EditProductRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EditProductRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EditProductRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *EditProductRequest) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *EditProductRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type EditProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EditProductResponse) Reset() {
	*x = EditProductResponse{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditProductResponse) ProtoMessage() {}

func (x *EditProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditProductResponse.ProtoReflect.Descriptor instead.
func (*EditProductResponse) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{11}
}

func (x *EditProductResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetProductByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
}

func (x *GetProductByIDRequest) Reset() {
	*x = GetProductByIDRequest{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProductByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductByIDRequest) ProtoMessage() {}

func (x *GetProductByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductByIDRequest.ProtoReflect.Descriptor instead.
func (*GetProductByIDRequest) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{12}
}

func (x *GetProductByIDRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type GetProductByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product *Product `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetProductByIDResponse) Reset() {
	*x = GetProductByIDResponse{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProductByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductByIDResponse) ProtoMessage() {}

func (x *GetProductByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductByIDResponse.ProtoReflect.Descriptor instead.
func (*GetProductByIDResponse) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{13}
}

func (x *GetProductByIDResponse) GetProduct() *Product {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *GetProductByIDResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetAllProductsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllProductsRequest) Reset() {
	*x = GetAllProductsRequest{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllProductsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllProductsRequest) ProtoMessage() {}

func (x *GetAllProductsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllProductsRequest.ProtoReflect.Descriptor instead.
func (*GetAllProductsRequest) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{14}
}

type GetAllProductsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Products []*Product `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
	Message  string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetAllProductsResponse) Reset() {
	*x = GetAllProductsResponse{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllProductsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllProductsResponse) ProtoMessage() {}

func (x *GetAllProductsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllProductsResponse.ProtoReflect.Descriptor instead.
func (*GetAllProductsResponse) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{15}
}

func (x *GetAllProductsResponse) GetProducts() []*Product {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *GetAllProductsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteProductByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId    string `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
	RestaurantId string `protobuf:"bytes,2,opt,name=restaurantId,proto3" json:"restaurantId,omitempty"`
}

func (x *DeleteProductByIDRequest) Reset() {
	*x = DeleteProductByIDRequest{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProductByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductByIDRequest) ProtoMessage() {}

func (x *DeleteProductByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductByIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteProductByIDRequest) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteProductByIDRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *DeleteProductByIDRequest) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

type DeleteProductByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteProductByIDResponse) Reset() {
	*x = DeleteProductByIDResponse{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProductByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductByIDResponse) ProtoMessage() {}

func (x *DeleteProductByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductByIDResponse.ProtoReflect.Descriptor instead.
func (*DeleteProductByIDResponse) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteProductByIDResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type IncremenentProductStockByValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
	Value     int32  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *IncremenentProductStockByValueRequest) Reset() {
	*x = IncremenentProductStockByValueRequest{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IncremenentProductStockByValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncremenentProductStockByValueRequest) ProtoMessage() {}

func (x *IncremenentProductStockByValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncremenentProductStockByValueRequest.ProtoReflect.Descriptor instead.
func (*IncremenentProductStockByValueRequest) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{18}
}

func (x *IncremenentProductStockByValueRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *IncremenentProductStockByValueRequest) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type IncremenentProductStockByValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *IncremenentProductStockByValueResponse) Reset() {
	*x = IncremenentProductStockByValueResponse{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IncremenentProductStockByValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncremenentProductStockByValueResponse) ProtoMessage() {}

func (x *IncremenentProductStockByValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncremenentProductStockByValueResponse.ProtoReflect.Descriptor instead.
func (*IncremenentProductStockByValueResponse) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{19}
}

func (x *IncremenentProductStockByValueResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DecrementProductStockByValueByValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
	Value     int32  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *DecrementProductStockByValueByValueRequest) Reset() {
	*x = DecrementProductStockByValueByValueRequest{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecrementProductStockByValueByValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecrementProductStockByValueByValueRequest) ProtoMessage() {}

func (x *DecrementProductStockByValueByValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecrementProductStockByValueByValueRequest.ProtoReflect.Descriptor instead.
func (*DecrementProductStockByValueByValueRequest) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{20}
}

func (x *DecrementProductStockByValueByValueRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *DecrementProductStockByValueByValueRequest) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type DecrementProductStockByValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DecrementProductStockByValueResponse) Reset() {
	*x = DecrementProductStockByValueResponse{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecrementProductStockByValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecrementProductStockByValueResponse) ProtoMessage() {}

func (x *DecrementProductStockByValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecrementProductStockByValueResponse.ProtoReflect.Descriptor instead.
func (*DecrementProductStockByValueResponse) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{21}
}

func (x *DecrementProductStockByValueResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetRestaurantIDviaProductIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
}

func (x *GetRestaurantIDviaProductIDRequest) Reset() {
	*x = GetRestaurantIDviaProductIDRequest{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRestaurantIDviaProductIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRestaurantIDviaProductIDRequest) ProtoMessage() {}

func (x *GetRestaurantIDviaProductIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRestaurantIDviaProductIDRequest.ProtoReflect.Descriptor instead.
func (*GetRestaurantIDviaProductIDRequest) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{22}
}

func (x *GetRestaurantIDviaProductIDRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type GetRestaurantIDviaProductIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestaurantId string `protobuf:"bytes,1,opt,name=restaurantId,proto3" json:"restaurantId,omitempty"`
	Message      string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetRestaurantIDviaProductIDResponse) Reset() {
	*x = GetRestaurantIDviaProductIDResponse{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRestaurantIDviaProductIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRestaurantIDviaProductIDResponse) ProtoMessage() {}

func (x *GetRestaurantIDviaProductIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRestaurantIDviaProductIDResponse.ProtoReflect.Descriptor instead.
func (*GetRestaurantIDviaProductIDResponse) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{23}
}

func (x *GetRestaurantIDviaProductIDResponse) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *GetRestaurantIDviaProductIDResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetStockByProductIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
}

func (x *GetStockByProductIDRequest) Reset() {
	*x = GetStockByProductIDRequest{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStockByProductIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStockByProductIDRequest) ProtoMessage() {}

func (x *GetStockByProductIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStockByProductIDRequest.ProtoReflect.Descriptor instead.
func (*GetStockByProductIDRequest) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{24}
}

func (x *GetStockByProductIDRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type GetStockByProductIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stock   int32  `protobuf:"varint,1,opt,name=stock,proto3" json:"stock,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetStockByProductIDResponse) Reset() {
	*x = GetStockByProductIDResponse{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStockByProductIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStockByProductIDResponse) ProtoMessage() {}

func (x *GetStockByProductIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStockByProductIDResponse.ProtoReflect.Descriptor instead.
func (*GetStockByProductIDResponse) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{25}
}

func (x *GetStockByProductIDResponse) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *GetStockByProductIDResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type BanRestaurantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestaurantId string `protobuf:"bytes,1,opt,name=restaurantId,proto3" json:"restaurantId,omitempty"`
	Reason       string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *BanRestaurantRequest) Reset() {
	*x = BanRestaurantRequest{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BanRestaurantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanRestaurantRequest) ProtoMessage() {}

func (x *BanRestaurantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanRestaurantRequest.ProtoReflect.Descriptor instead.
func (*BanRestaurantRequest) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{26}
}

func (x *BanRestaurantRequest) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *BanRestaurantRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type BanRestaurantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *BanRestaurantResponse) Reset() {
	*x = BanRestaurantResponse{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BanRestaurantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanRestaurantResponse) ProtoMessage() {}

func (x *BanRestaurantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanRestaurantResponse.ProtoReflect.Descriptor instead.
func (*BanRestaurantResponse) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{27}
}

func (x *BanRestaurantResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UnbanRestaurantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestaurantId string `protobuf:"bytes,1,opt,name=restaurantId,proto3" json:"restaurantId,omitempty"`
}

func (x *UnbanRestaurantRequest) Reset() {
	*x = UnbanRestaurantRequest{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnbanRestaurantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbanRestaurantRequest) ProtoMessage() {}

func (x *UnbanRestaurantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbanRestaurantRequest.ProtoReflect.Descriptor instead.
func (*UnbanRestaurantRequest) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{28}
}

func (x *UnbanRestaurantRequest) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

type UnbanRestaurantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UnbanRestaurantResponse) Reset() {
	*x = UnbanRestaurantResponse{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnbanRestaurantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbanRestaurantResponse) ProtoMessage() {}

func (x *UnbanRestaurantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbanRestaurantResponse.ProtoReflect.Descriptor instead.
func (*UnbanRestaurantResponse) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{29}
}

func (x *UnbanRestaurantResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Define the Address message
type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressId  string `protobuf:"bytes,1,opt,name=addressId,proto3" json:"addressId,omitempty"`
	StreetName string `protobuf:"bytes,2,opt,name=streetName,proto3" json:"streetName,omitempty"`
	Locality   string `protobuf:"bytes,3,opt,name=locality,proto3" json:"locality,omitempty"`
	State      string `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	Pincode    string `protobuf:"bytes,5,opt,name=pincode,proto3" json:"pincode,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{30}
}

func (x *Address) GetAddressId() string {
	if x != nil {
		return x.AddressId
	}
	return ""
}

func (x *Address) GetStreetName() string {
	if x != nil {
		return x.StreetName
	}
	return ""
}

func (x *Address) GetLocality() string {
	if x != nil {
		return x.Locality
	}
	return ""
}

func (x *Address) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Address) GetPincode() string {
	if x != nil {
		return x.Pincode
	}
	return ""
}

// Define the RestaurantSignupRequest message
type RestaurantSignupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestaurantName string   `protobuf:"bytes,1,opt,name=restaurantName,proto3" json:"restaurantName,omitempty"`
	OwnerEmail     string   `protobuf:"bytes,2,opt,name=ownerEmail,proto3" json:"ownerEmail,omitempty"`
	Password       string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	PhoneNumber    uint64   `protobuf:"varint,4,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	Address        *Address `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *RestaurantSignupRequest) Reset() {
	*x = RestaurantSignupRequest{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestaurantSignupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantSignupRequest) ProtoMessage() {}

func (x *RestaurantSignupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantSignupRequest.ProtoReflect.Descriptor instead.
func (*RestaurantSignupRequest) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{31}
}

func (x *RestaurantSignupRequest) GetRestaurantName() string {
	if x != nil {
		return x.RestaurantName
	}
	return ""
}

func (x *RestaurantSignupRequest) GetOwnerEmail() string {
	if x != nil {
		return x.OwnerEmail
	}
	return ""
}

func (x *RestaurantSignupRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RestaurantSignupRequest) GetPhoneNumber() uint64 {
	if x != nil {
		return x.PhoneNumber
	}
	return 0
}

func (x *RestaurantSignupRequest) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

// Define the RestaurantSignupResponse message
type RestaurantSignupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestaurantId string `protobuf:"bytes,1,opt,name=restaurantId,proto3" json:"restaurantId,omitempty"`
	Token        string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Message      string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RestaurantSignupResponse) Reset() {
	*x = RestaurantSignupResponse{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestaurantSignupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantSignupResponse) ProtoMessage() {}

func (x *RestaurantSignupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantSignupResponse.ProtoReflect.Descriptor instead.
func (*RestaurantSignupResponse) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{32}
}

func (x *RestaurantSignupResponse) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *RestaurantSignupResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RestaurantSignupResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Define the RestaurantLoginRequest message
type RestaurantLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerEmail string `protobuf:"bytes,1,opt,name=ownerEmail,proto3" json:"ownerEmail,omitempty"`
	Password   string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *RestaurantLoginRequest) Reset() {
	*x = RestaurantLoginRequest{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestaurantLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantLoginRequest) ProtoMessage() {}

func (x *RestaurantLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantLoginRequest.ProtoReflect.Descriptor instead.
func (*RestaurantLoginRequest) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{33}
}

func (x *RestaurantLoginRequest) GetOwnerEmail() string {
	if x != nil {
		return x.OwnerEmail
	}
	return ""
}

func (x *RestaurantLoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// Define the RestaurantLoginResponse message
type RestaurantLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RestaurantId string `protobuf:"bytes,1,opt,name=restaurantId,proto3" json:"restaurantId,omitempty"`
	Token        string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Message      string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RestaurantLoginResponse) Reset() {
	*x = RestaurantLoginResponse{}
	mi := &file_Restaurant_restaurant_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestaurantLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestaurantLoginResponse) ProtoMessage() {}

func (x *RestaurantLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Restaurant_restaurant_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestaurantLoginResponse.ProtoReflect.Descriptor instead.
func (*RestaurantLoginResponse) Descriptor() ([]byte, []int) {
	return file_Restaurant_restaurant_proto_rawDescGZIP(), []int{34}
}

func (x *RestaurantLoginResponse) GetRestaurantId() string {
	if x != nil {
		return x.RestaurantId
	}
	return ""
}

func (x *RestaurantLoginResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RestaurantLoginResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_Restaurant_restaurant_proto protoreflect.FileDescriptor

var file_Restaurant_restaurant_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2f, 0x72, 0x65, 0x73,
	0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x22, 0xb4, 0x01, 0x0a, 0x15, 0x45, 0x64,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x2d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x32, 0x0a, 0x16, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x46, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x21,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x24, 0x0a, 0x22,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74,
	0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x86, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xe6, 0x01, 0x0a, 0x16,
	0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65,
	0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x2f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x22, 0xc9, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x22, 0xb5, 0x01, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x4c, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xd4, 0x01, 0x0a, 0x12, 0x45, 0x64, 0x69, 0x74, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x2f, 0x0a,
	0x13, 0x45, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x35,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2d, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x63, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5c, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5b, 0x0a, 0x25, 0x49,
	0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x42, 0x0a, 0x26, 0x49, 0x6e, 0x63, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x42, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x60, 0x0a, 0x2a,
	0x44, 0x65, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x40,
	0x0a, 0x24, 0x44, 0x65, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x42, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x49, 0x44, 0x76, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x76, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3a, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x52, 0x0a, 0x14, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x31, 0x0a, 0x15, 0x42, 0x61, 0x6e, 0x52,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3c, 0x0a, 0x16, 0x55,
	0x6e, 0x62, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73,
	0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x17, 0x55, 0x6e, 0x62,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x93,
	0x01, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x65,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74,
	0x72, 0x65, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x69,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x69, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0xce, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x6e, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x54, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x6d, 0x0a, 0x17, 0x52,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x84, 0x0d, 0x0a, 0x11, 0x52,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x5d, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x53, 0x69,
	0x67, 0x6e, 0x75, 0x70, 0x12, 0x23, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x72, 0x65, 0x73, 0x74,
	0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5a, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x12, 0x22, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0e, 0x45,
	0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x21, 0x2e,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x52,
	0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x45, 0x64,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x78, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x42, 0x79, 0x49,
	0x44, 0x12, 0x2c, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2d, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x80,
	0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12,
	0x2e, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x41, 0x6e, 0x64,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x30, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x54, 0x0a, 0x0d, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x12, 0x20, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0f, 0x55, 0x6e, 0x62, 0x61, 0x6e,
	0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x72, 0x65, 0x73,
	0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x52, 0x65, 0x73,
	0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x55, 0x6e, 0x62, 0x61,
	0x6e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x12, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x41,
	0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x41, 0x64,
	0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4e, 0x0a, 0x0b, 0x45, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12,
	0x1e, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x45, 0x64, 0x69,
	0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x45, 0x64, 0x69,
	0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x57, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x21, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x21, 0x2e, 0x72, 0x65,
	0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x60, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x24, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x1e, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x42, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x65, 0x6e, 0x74,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x72, 0x65, 0x73,
	0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x88,
	0x01, 0x0a, 0x1c, 0x44, 0x65, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x36, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x63,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x42, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x76, 0x69, 0x61, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x2e, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x49, 0x44, 0x76, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72,
	0x61, 0x6e, 0x74, 0x49, 0x44, 0x76, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44,
	0x12, 0x26, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x75, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x79,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x03, 0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Restaurant_restaurant_proto_rawDescOnce sync.Once
	file_Restaurant_restaurant_proto_rawDescData = file_Restaurant_restaurant_proto_rawDesc
)

func file_Restaurant_restaurant_proto_rawDescGZIP() []byte {
	file_Restaurant_restaurant_proto_rawDescOnce.Do(func() {
		file_Restaurant_restaurant_proto_rawDescData = protoimpl.X.CompressGZIP(file_Restaurant_restaurant_proto_rawDescData)
	})
	return file_Restaurant_restaurant_proto_rawDescData
}

var file_Restaurant_restaurant_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_Restaurant_restaurant_proto_goTypes = []any{
	(*EditRestaurantRequest)(nil),                      // 0: restaurant.EditRestaurantRequest
	(*EditRestaurantResponse)(nil),                     // 1: restaurant.EditRestaurantResponse
	(*GetRestaurantProductsByIDRequest)(nil),           // 2: restaurant.GetRestaurantProductsByIDRequest
	(*GetRestaurantProductsByIDResponse)(nil),          // 3: restaurant.GetRestaurantProductsByIDResponse
	(*GetAllRestaurantAndProductsRequest)(nil),         // 4: restaurant.GetAllRestaurantAndProductsRequest
	(*GetAllRestaurantWithProductsResponse)(nil),       // 5: restaurant.GetAllRestaurantWithProductsResponse
	(*RestaurantWithProducts)(nil),                     // 6: restaurant.RestaurantWithProducts
	(*Product)(nil),                                    // 7: restaurant.Product
	(*AddProductRequest)(nil),                          // 8: restaurant.AddProductRequest
	(*AddProductResponse)(nil),                         // 9: restaurant.AddProductResponse
	(*EditProductRequest)(nil),                         // 10: restaurant.EditProductRequest
	(*EditProductResponse)(nil),                        // 11: restaurant.EditProductResponse
	(*GetProductByIDRequest)(nil),                      // 12: restaurant.GetProductByIDRequest
	(*GetProductByIDResponse)(nil),                     // 13: restaurant.GetProductByIDResponse
	(*GetAllProductsRequest)(nil),                      // 14: restaurant.GetAllProductsRequest
	(*GetAllProductsResponse)(nil),                     // 15: restaurant.GetAllProductsResponse
	(*DeleteProductByIDRequest)(nil),                   // 16: restaurant.DeleteProductByIDRequest
	(*DeleteProductByIDResponse)(nil),                  // 17: restaurant.DeleteProductByIDResponse
	(*IncremenentProductStockByValueRequest)(nil),      // 18: restaurant.IncremenentProductStockByValueRequest
	(*IncremenentProductStockByValueResponse)(nil),     // 19: restaurant.IncremenentProductStockByValueResponse
	(*DecrementProductStockByValueByValueRequest)(nil), // 20: restaurant.DecrementProductStockByValueByValueRequest
	(*DecrementProductStockByValueResponse)(nil),       // 21: restaurant.DecrementProductStockByValueResponse
	(*GetRestaurantIDviaProductIDRequest)(nil),         // 22: restaurant.GetRestaurantIDviaProductIDRequest
	(*GetRestaurantIDviaProductIDResponse)(nil),        // 23: restaurant.GetRestaurantIDviaProductIDResponse
	(*GetStockByProductIDRequest)(nil),                 // 24: restaurant.GetStockByProductIDRequest
	(*GetStockByProductIDResponse)(nil),                // 25: restaurant.GetStockByProductIDResponse
	(*BanRestaurantRequest)(nil),                       // 26: restaurant.BanRestaurantRequest
	(*BanRestaurantResponse)(nil),                      // 27: restaurant.BanRestaurantResponse
	(*UnbanRestaurantRequest)(nil),                     // 28: restaurant.UnbanRestaurantRequest
	(*UnbanRestaurantResponse)(nil),                    // 29: restaurant.UnbanRestaurantResponse
	(*Address)(nil),                                    // 30: restaurant.Address
	(*RestaurantSignupRequest)(nil),                    // 31: restaurant.RestaurantSignupRequest
	(*RestaurantSignupResponse)(nil),                   // 32: restaurant.RestaurantSignupResponse
	(*RestaurantLoginRequest)(nil),                     // 33: restaurant.RestaurantLoginRequest
	(*RestaurantLoginResponse)(nil),                    // 34: restaurant.RestaurantLoginResponse
}
var file_Restaurant_restaurant_proto_depIdxs = []int32{
	30, // 0: restaurant.EditRestaurantRequest.address:type_name -> restaurant.Address
	7,  // 1: restaurant.GetRestaurantProductsByIDResponse.products:type_name -> restaurant.Product
	6,  // 2: restaurant.GetAllRestaurantWithProductsResponse.restaurants:type_name -> restaurant.RestaurantWithProducts
	30, // 3: restaurant.RestaurantWithProducts.address:type_name -> restaurant.Address
	7,  // 4: restaurant.RestaurantWithProducts.products:type_name -> restaurant.Product
	7,  // 5: restaurant.GetProductByIDResponse.product:type_name -> restaurant.Product
	7,  // 6: restaurant.GetAllProductsResponse.products:type_name -> restaurant.Product
	30, // 7: restaurant.RestaurantSignupRequest.address:type_name -> restaurant.Address
	31, // 8: restaurant.RestaurantService.RestaurantSignup:input_type -> restaurant.RestaurantSignupRequest
	33, // 9: restaurant.RestaurantService.RestaurantLogin:input_type -> restaurant.RestaurantLoginRequest
	0,  // 10: restaurant.RestaurantService.EditRestaurant:input_type -> restaurant.EditRestaurantRequest
	2,  // 11: restaurant.RestaurantService.GetRestaurantProductsByID:input_type -> restaurant.GetRestaurantProductsByIDRequest
	4,  // 12: restaurant.RestaurantService.GetAllRestaurantWithProducts:input_type -> restaurant.GetAllRestaurantAndProductsRequest
	26, // 13: restaurant.RestaurantService.BanRestaurant:input_type -> restaurant.BanRestaurantRequest
	28, // 14: restaurant.RestaurantService.UnbanRestaurant:input_type -> restaurant.UnbanRestaurantRequest
	8,  // 15: restaurant.RestaurantService.AddProduct:input_type -> restaurant.AddProductRequest
	10, // 16: restaurant.RestaurantService.EditProduct:input_type -> restaurant.EditProductRequest
	12, // 17: restaurant.RestaurantService.GetProductByID:input_type -> restaurant.GetProductByIDRequest
	14, // 18: restaurant.RestaurantService.GetAllProducts:input_type -> restaurant.GetAllProductsRequest
	16, // 19: restaurant.RestaurantService.DeleteProductByID:input_type -> restaurant.DeleteProductByIDRequest
	18, // 20: restaurant.RestaurantService.IncremenentProductStockByValue:input_type -> restaurant.IncremenentProductStockByValueRequest
	20, // 21: restaurant.RestaurantService.DecrementProductStockByValue:input_type -> restaurant.DecrementProductStockByValueByValueRequest
	22, // 22: restaurant.RestaurantService.GetRestaurantIDviaProductID:input_type -> restaurant.GetRestaurantIDviaProductIDRequest
	24, // 23: restaurant.RestaurantService.GetStockByProductID:input_type -> restaurant.GetStockByProductIDRequest
	32, // 24: restaurant.RestaurantService.RestaurantSignup:output_type -> restaurant.RestaurantSignupResponse
	34, // 25: restaurant.RestaurantService.RestaurantLogin:output_type -> restaurant.RestaurantLoginResponse
	1,  // 26: restaurant.RestaurantService.EditRestaurant:output_type -> restaurant.EditRestaurantResponse
	3,  // 27: restaurant.RestaurantService.GetRestaurantProductsByID:output_type -> restaurant.GetRestaurantProductsByIDResponse
	5,  // 28: restaurant.RestaurantService.GetAllRestaurantWithProducts:output_type -> restaurant.GetAllRestaurantWithProductsResponse
	27, // 29: restaurant.RestaurantService.BanRestaurant:output_type -> restaurant.BanRestaurantResponse
	29, // 30: restaurant.RestaurantService.UnbanRestaurant:output_type -> restaurant.UnbanRestaurantResponse
	9,  // 31: restaurant.RestaurantService.AddProduct:output_type -> restaurant.AddProductResponse
	11, // 32: restaurant.RestaurantService.EditProduct:output_type -> restaurant.EditProductResponse
	13, // 33: restaurant.RestaurantService.GetProductByID:output_type -> restaurant.GetProductByIDResponse
	15, // 34: restaurant.RestaurantService.GetAllProducts:output_type -> restaurant.GetAllProductsResponse
	17, // 35: restaurant.RestaurantService.DeleteProductByID:output_type -> restaurant.DeleteProductByIDResponse
	19, // 36: restaurant.RestaurantService.IncremenentProductStockByValue:output_type -> restaurant.IncremenentProductStockByValueResponse
	21, // 37: restaurant.RestaurantService.DecrementProductStockByValue:output_type -> restaurant.DecrementProductStockByValueResponse
	23, // 38: restaurant.RestaurantService.GetRestaurantIDviaProductID:output_type -> restaurant.GetRestaurantIDviaProductIDResponse
	25, // 39: restaurant.RestaurantService.GetStockByProductID:output_type -> restaurant.GetStockByProductIDResponse
	24, // [24:40] is the sub-list for method output_type
	8,  // [8:24] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_Restaurant_restaurant_proto_init() }
func file_Restaurant_restaurant_proto_init() {
	if File_Restaurant_restaurant_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Restaurant_restaurant_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_Restaurant_restaurant_proto_goTypes,
		DependencyIndexes: file_Restaurant_restaurant_proto_depIdxs,
		MessageInfos:      file_Restaurant_restaurant_proto_msgTypes,
	}.Build()
	File_Restaurant_restaurant_proto = out.File
	file_Restaurant_restaurant_proto_rawDesc = nil
	file_Restaurant_restaurant_proto_goTypes = nil
	file_Restaurant_restaurant_proto_depIdxs = nil
}
