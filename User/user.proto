syntax = "proto3";

package user;
option go_package = ".";

service UserService {
    rpc UserLogin(UserLoginRequest) returns (UserLoginResponse);
    rpc UserSignup(UserSignupRequest) returns (UserSignupResponse);
    rpc VerifyEmail(EmailVerificationRequest) returns (EmailVerificationResponse);
    rpc GetProfile(GetProfileRequest) returns (GetProfileResponse);
    rpc UpdateProfile(UpdateProfileRequest) returns (UpdateProfileResponse);
    rpc GetUserByToken(GetUserByTokenRequest) returns (GetProfileResponse);
    rpc CheckBan(CheckBanRequest) returns (CheckBanResponse);
    rpc BanUser(BanUserRequest) returns (BanUserResponse);
    rpc UnBanUser(UnBanUserRequest) returns (UnBanUserResponse);
    rpc AddAddress(AddAddressRequest) returns (AddAddressResponse);
    rpc GetAddresses(GetAddressesRequest) returns (GetAddressesResponse);
    rpc EditAddress(EditAddressRequest) returns (EditAddressResponse);
    rpc DeleteAddress(DeleteAddressRequest) returns (DeleteAddressResponse);
    rpc GetAllUsers(GetAllUsersRequest) returns (GetAllUsersResponse);
    rpc ValidateUserAddress(ValidateUserAddressRequest) returns (ValidateUserAddressResponse);
}

message GetAllUsersRequest{}

message GetAllUsersResponse {
  bool success  = 1;
  repeated GetProfileResponse users = 2;
}

message UserLoginRequest {
    string email = 1;
    string password = 2;
}

message UserLoginResponse {
    bool success =1;
    string userId = 2;
    string token = 3; 
    string message = 4;
}

message UserSignupRequest {
    string email = 1;
    string password = 2;
    string username = 3;
    string firstName = 4;
    string lastName = 5;
    uint64 phoneNumber = 6;
    Address address = 7;
}

message UserSignupResponse {
    bool success =1;
    string userId = 2;
    string token = 3; 
    string message = 4;
}

message Address {
    string addressId = 1; 
    string streetName = 2;
    string locality = 3;
    string state = 4;
    string pincode = 5;
}

message BanUserRequest {
    string userId = 1;
}

message BanUserResponse {
    bool success = 1;
    string message = 2;
}

message UnBanUserRequest {
    string userId = 1;
}

message UnBanUserResponse {
    bool success = 1;
    string message = 2;
}

message EmailVerificationRequest {
    string userId = 1;
    string verificationCode = 2;
}

message EmailVerificationResponse {
    bool success = 1;
    string message = 2;
    string token = 3;
}

message GetProfileRequest {
    string userId = 1;
    string token = 2;
}

message GetProfileResponse {
    string userId = 1;
    string email = 2;
    string name = 3;
    int32 reputation = 4;
    Address address = 5; 
    uint64 phoneNumber = 6;
    bool isVerified = 7;
    bool isBanned = 8;
}

message UpdateProfileRequest {
    string userId = 1;
    string name = 2;
    uint64 phoneNumber = 4;
}

message UpdateProfileResponse {
    bool success = 1;
    string message = 2;
    GetProfileResponse profile = 3;
}

message GetUserByTokenRequest {
    string token = 1;
}

message CheckBanRequest {
    string userId = 1;
}

message CheckBanResponse {
    string userId = 1;
    bool banStatus = 2;
}

message AddAddressRequest {
    string userId = 1;
    Address address = 2;
}

message AddAddressResponse {
    bool success = 1;
    string message = 2;
    string addressId = 3; 
}

message GetAddressesRequest {
    string userId = 1;
}

message GetAddressesResponse {
    bool success = 1;
    string message = 2;
    repeated Address addresses = 3; 
}

message EditAddressRequest {
    string userId = 1;
    string addressId = 2; 
    Address address = 3; 
}

message EditAddressResponse {
    bool success = 1;
    string message = 2;
}

message DeleteAddressRequest {
    string userId = 1;
    string addressId = 2; 
}

message DeleteAddressResponse {
    bool success = 1;
    string message = 2;
}

message ValidateUserAddressRequest {
    string userId = 1;
    string addressId = 2;
}

message ValidateUserAddressResponse {
    bool isValid = 1;
    string message = 2;
    Address address = 3;  // Returns the address if valid
}
